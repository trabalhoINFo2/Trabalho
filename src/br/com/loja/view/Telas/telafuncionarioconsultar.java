/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.loja.view.Telas;

import br.com.loja.dao.FuncionarioDao;
import br.com.loja.entidade.Funcionario;
import com.sun.javafx.scene.control.skin.VirtualFlow;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author hianf
 */
public class telafuncionarioconsultar extends javax.swing.JFrame {

    public telafuncionarioconsultar() throws SQLException {
        initComponents();
        //consultar no banco de dados
        FuncionarioDao dao = new FuncionarioDao();

        List<Funcionario> funcionarioList = dao.consultatodos();

        //prencher tabela 
        preenchertable(funcionarioList);
    }

    private void preenchertable(List<Funcionario> funcionarioList) {
        //configurar cabeçalho
        String[] cabecalho = new String[]{"Codigo", "Nome", "CPF" ,"Número" , "Bairro" ,"Cidade" , "UF", "Idade"};

        //preencher dados na matriz que foi feita em formato de string
        String[][] conteudo = new String[funcionarioList.size()][8];

        //preencher dados na matriz
        for (int i = 0; i < funcionarioList.size(); i++) {
            Funcionario f = funcionarioList.get(i);
            conteudo[i][0] = f.getCodigo() +"";
            conteudo[i][1] = f.getNome() ;
            conteudo[i][2] = f.getCpf() ;
            conteudo[i][3] = f.getNumero() +"";
            conteudo[i][4] = f.getBairro()+"";
            conteudo[i][5] = f.getCidade()+"";
            conteudo[i][6] = f.getUF()+"";
            conteudo[i][7] = f.getIdade()+"";
            

        }

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                conteudo,
                cabecalho
        ));

        jButton1.setEnabled(false);
        jButton2.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setTitle("Cadastro de Funcionários");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Nome :");

        jButton3.setText("+");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 70));

        jButton1.setText("Alterar");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Excluir");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(155, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(77, 77, 77)
                .addComponent(jButton2)
                .addGap(130, 130, 130))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 490, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 530, 230));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        telafuncionarioinserirJDialog frame = new telafuncionarioinserirJDialog(this);
        frame.setVisible(true);
        
        
        Funcionario funcionarioinserido = frame.getFuncionarioinserido();
        if(funcionarioinserido != null){
            List<Funcionario> funcionarioList =  new ArrayList<Funcionario>();
            funcionarioList.add(funcionarioinserido);
            preenchertable(funcionarioList);
                    }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (evt.getKeyCode() == 10) {

            try {
                String nome = jTextField1.getText();

                FuncionarioDao dao = new FuncionarioDao();
                List<Funcionario> funcionarioList = dao.consultarpornome(nome);

                preenchertable(funcionarioList);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, " Erro ao consultar nome deFuncionário no banco  " + ex.getMessage());
            }

        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //pegar a linha selecionada
        int linha = jTable1.getSelectedRow();
        //pegar o modelo que contem todos os dados na tabela
        TableModel model = jTable1.getModel();
        // com o modelo de obter o valor encontrado na linha e na coluna zero que correspode a coluna de codigo
        String codstr = model.getValueAt(linha, 0).toString();

        //trasformar o codstr em inteiro, pois o dao de cliente faz consulta por codigo utilizando inteiro
        int cod = Integer.parseInt(codstr);

        //consultat o dao para consultar o banco de dados
        FuncionarioDao funciDao = new FuncionarioDao();
        Funcionario f = null;

        try {
            f = funciDao.consultarporcod(cod);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, " Erro ao consultar funcionario (cod ='" + cod + "') :- " + ex.getMessage());
            return;
        }

        if (f != null) {
            telafuncionarioalterarJDialog dialog = new telafuncionarioalterarJDialog(this, f);
            dialog.setVisible(true);

            Funcionario funcionarioalterado = dialog.getFuncionarioalterado();

            model.setValueAt(funcionarioalterado.getNome(), linha, 1);
            model.setValueAt(funcionarioalterado.getCpf(), linha, 2);

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int confirmacao = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o funcionario selecionado ");

        if (confirmacao ==   0) {

//pegar a linha selecionada
            int linha = jTable1.getSelectedRow();
            //pegar o modelo que contem todos os dados na tabela
            TableModel model = jTable1.getModel();
            // com o modelo de obter o valor encontrado na linha e na coluna zero que correspode a coluna de codigo
            String codstr = model.getValueAt(linha, 0).toString();

            //trasformar o codstr em inteiro, pois o dao de cliente faz consulta por codigo utilizando inteiro
            int cod = Integer.parseInt(codstr);

            //consultat o dao para consultar o banco de dados
            FuncionarioDao funciDao = new FuncionarioDao();

            try {
                funciDao.excluir(cod);
                
                List<Funcionario> funcionarioList = funciDao.consultatodos();

        //prencher tabela 
        preenchertable(funcionarioList);
                
                
                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, " Erro ao excluir funcionario (cod ='" + cod + "') :- " + ex.getMessage());
                return;
            }
    }//GEN-LAST:event_jButton2ActionPerformed
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telafuncionarioconsultar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telafuncionarioconsultar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telafuncionarioconsultar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telafuncionarioconsultar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new telafuncionarioconsultar().setVisible(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao consultar todos os funcionarios   " + ex.getMessage());
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
